// bootstrap 變數
// @import './variable';: #00d3be!default;
$primary: #FF8A00!default; 
$secondary: #45C7BF !default;
$success: #94D8A4 !default;
$info: #369bfd !default;
$warning: #ffd22c !default;
$danger: #fd3635 !default;
$light: #C4C4C4 !default;
$dark: #000000 !default;
$gold: #D8A272;
$primary-color: #FF8A00 !important;
$secondary-color: #45C7BF !important;

// 蓋掉 bootstrap預設字體樣式
$font-family-sans-serif:'Roboto', 'Noto Sans TC', sans-serif, Arial, "微軟正黑體", "Microsoft JhengHei", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

// 蓋掉bootstrap應影
$box-shadow:  0px 0px 5px 3px rgba(0, 0, 0, 0.1);

$main-gray: #2e2e2e !default;
$light-gray: #E6E6E6!default;
$gray: #CCCCCC !default;

$main-dark: #1A1A1A;

/* 主色應用 */
$primary-color-light: rgba(248, 245, 241, 1) !default;
$primary-color-30: rgba(158, 129, 34, 0.3) !default;

/* 輔色應用 */
$secondary-color-light: rgb(185, 59, 179, 1) !important;
$secondary-color-30: rgba(145, 46, 140, 0.3) !important;
$secondary-color-20: rgba(145, 46, 140, 0.2) !important;

$gold-gradient: linear-gradient(to right, #98692F 0%,#AC7F30 8%, #D6A232 20%, #F4ECA7 40%, #CF9D30 45%, #A6722B 60%, #935926 70%, #E3B034 90%, #F2CF73 100%);
$gold-gradient-v2: linear-gradient(to right, #F9DE84 0%, #AC773A 33.3%, #F9DE84 66.6%, #AC773A 100%);

/* 漸層應用 */
$primary-gradient: linear-gradient(to right, rgba(255, 214, 0, 1) 0%, rgba(69, 199, 191, 1) 100%);
$primary-gradient-reverse: linear-gradient(to left, rgba(255, 214, 0, 1) 0%, rgba(69, 199, 191, 1) 100%);
$primary-gradient-v: linear-gradient(to bottom, #F9DE84 0%, #AC773A 33.3%, #F9DE84 66.6%, #AC773A 100%);
$secondary-gradient: linear-gradient(-45deg, #922D8D, #D7262E);

/*  boostrap 參數調整 */

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$grid-breakpoints: map-merge(
  (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl:1400px //新增
  ),
  $grid-breakpoints
);

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints);


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$container-max-widths: map-merge(
  (
    sm: 100%,
    md: 720px,
    lg: 960px,
    xl: 1080px,
    xxl: 1160px //新增
  ),
  $container-max-widths
);
@include _assert-ascending($container-max-widths, "$container-max-widths");



//----------文字優雅降級
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}
@mixin font-size($size) {
  // font-size: $size;
  font-size: calculateRem($size);
}
//usage
// .example-font-size {
//     @include font-size(14px)
// }

$type-scales: (
  minor-second: 1.067,
  major-second: 1.125,
  minor-third: 1.2,
  major-third: 1.25,
  perfect-fourth: 1.333,
  augmented-fourth: 1.414,
  perfect-fifth: 1.5,
  golden-ratio: 1.618,
);

@function check-type-scale-value($scale) {
  // Check $scale against the values in $type-scales.
  @if map-has-key($type-scales, $scale) {
    // If the value of $scale is defined in
    // $type-scales, return the value of $scale.
    @return map-get($type-scales, $scale);

    // If the value of $scale is not defined in the
    // $type-scales map, check if the value is a number
    // and that the number is a unitless value.
  } @else if type-of($scale) == number and unitless($scale) {
    // If the value of $scale is a unitless number,
    // return the number.
    @return $scale;

    // Lastly, should the value passed to $scale be neither
    // found in the $type-scales map nor a unitless number,
    // throw a Sass error to explain the issue.
  } @else {
    // Throw a Sass error if the $scale value is
    // neither found in the $type-scales map nor
    // a unitless number.
    @error "Sorry, `#{$scale}` is not a unitless number value or a pre-defined key in the $type-scales map.";
  }
}
